<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-09-18T16:15:40+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">haoru’s Blog</title><subtitle>haoru&apos;s blog, something from my daily random thoughts</subtitle><author><name>Zhao Haoru</name><email>zhaohaoru@sjtu.edu.cn</email></author><entry><title type="html">react-navigation 6.x 使用指南 (3)</title><link href="http://localhost:4000/2022-09-18/react-navigation_3" rel="alternate" type="text/html" title="react-navigation 6.x 使用指南 (3)" /><published>2022-09-18T00:00:00+08:00</published><updated>2022-09-18T00:00:00+08:00</updated><id>http://localhost:4000/2022-09-18/react-navigation_3</id><content type="html" xml:base="http://localhost:4000/2022-09-18/react-navigation_3"><![CDATA[<p>react-navigation 6.x版本的安装、传参、navigator的使用等介绍（part3）。
<!--more--></p>

<p>目前react-navigation的官方文档已经更新到了<code class="language-plaintext highlighter-rouge">6.x</code>版本，在<a href="https://reactnavigation.org/docs/getting-started/">官方文档</a>中对于其基本的使用方法也有所介绍，但是对于一些比较复杂的使用场景，或者传参等细节问题并没有给出详细的解决方案。</p>

<p>在这篇文章中，我将介绍不同页面之间参数的传递和 <code class="language-plaintext highlighter-rouge">Link</code>的使用。</p>

<h2 id="页面导航与参数传递">页面导航与参数传递</h2>
<h3 id="navigationnavigate--navigationreplace">navigation.navigate &amp; navigation.replace</h3>
<p>在<a href="https://reactnavigation.org/docs/params">官方文档</a>中给出了<code class="language-plaintext highlighter-rouge">navigation.navigate</code>参数传递的基本方式：</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Text</span><span class="p">,</span> <span class="nx">View</span><span class="p">,</span> <span class="nx">Button</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">NavigationContainer</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">createNativeStackNavigator</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native-stack</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">HomeScreen</span><span class="p">({</span> <span class="nx">navigation</span> <span class="p">})</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span>
        <span class="p">......</span>
        <span class="o">&lt;</span><span class="nx">Button</span>
            <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go to Details</span><span class="dl">"</span>
            <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="cm">/* 1. Navigate to the Details route with params */</span>
            <span class="nx">navigation</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="dl">'</span><span class="s1">Details</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
                <span class="na">itemId</span><span class="p">:</span> <span class="mi">86</span><span class="p">,</span>
                <span class="na">otherParam</span><span class="p">:</span> <span class="dl">'</span><span class="s1">anything you want here</span><span class="dl">'</span><span class="p">,</span>
            <span class="p">});</span>
            <span class="p">}}</span>
        <span class="sr">/</span><span class="err">&gt;
</span>        <span class="p">......</span>
    <span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">DetailsScreen</span><span class="p">({</span> <span class="nx">route</span><span class="p">,</span> <span class="nx">navigation</span> <span class="p">})</span> <span class="p">{</span>
    <span class="cm">/* 2. Get the param */</span>
    <span class="kd">const</span> <span class="p">{</span> <span class="nx">itemId</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">route</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
    <span class="kd">const</span> <span class="p">{</span> <span class="nx">otherParam</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">route</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
    <span class="k">return</span> <span class="p">(</span>
    <span class="p">......</span>
    <span class="p">);</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">Stack</span> <span class="o">=</span> <span class="nx">createNativeStackNavigator</span><span class="p">();</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">NavigationContainer</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Navigator</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Home</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Details</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">DetailsScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/Stack.Navigator</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/NavigationContainer</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<p>如果需要传递参数，需要在函数上加入<code class="language-plaintext highlighter-rouge">navigation</code>的参数，如果需要接受接受参数, 则需要加入<code class="language-plaintext highlighter-rouge">route</code>并使用<code class="language-plaintext highlighter-rouge">route.params</code>获得参数。</p>

<p><code class="language-plaintext highlighter-rouge">navigation.replace</code>和<code class="language-plaintext highlighter-rouge">navigation.navigate</code>传递参数的方式是一样的，区别是<code class="language-plaintext highlighter-rouge">navigation.navigate</code>相当于新压入一个页面，回退的时候还是会回退到当前页面，<code class="language-plaintext highlighter-rouge">navigation.replace</code>是以新页面替换掉了当前页面。</p>

<h2 id="link的使用以及参数传递">Link的使用以及参数传递</h2>
<p>使用<code class="language-plaintext highlighter-rouge">Link</code>也可以帮助我们在不同页面之间进行导航，与<code class="language-plaintext highlighter-rouge">navigation.navigate</code>相比，<code class="language-plaintext highlighter-rouge">Link</code>更加自由，因为它不需要在函数上加上<code class="language-plaintext highlighter-rouge">navigation</code>的参数。</p>

<h3 id="基本用法">基本用法</h3>
<p>在<a href="https://reactnavigation.org/docs/link/">官方文档</a>提供了基本的用法。</p>

<h3 id="参数传递和接收">参数传递和接收</h3>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span><span class="nx">Link</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native</span><span class="dl">'</span><span class="p">;</span>
<span class="p">...</span>

<span class="c1">// 参数的传出</span>
<span class="kd">const</span> <span class="nx">Card</span> <span class="o">=</span> <span class="p">({</span><span class="nx">props</span><span class="p">,</span> <span class="nx">userId</span><span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="p">...</span>
    <span class="k">return</span> <span class="p">(</span>
        <span class="p">...</span>
            <span class="o">&lt;</span><span class="nx">Link</span>
            <span class="nx">to</span><span class="o">=</span><span class="p">{{</span>
                <span class="na">screen</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Detail</span><span class="dl">'</span><span class="p">,</span>
                <span class="na">initial</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
                <span class="na">params</span><span class="p">:</span> <span class="p">{</span><span class="na">props</span><span class="p">:</span> <span class="nx">props</span><span class="p">,</span> <span class="na">userId</span><span class="p">:</span> <span class="nx">userId</span><span class="p">},</span>
            <span class="p">}}</span><span class="o">&gt;</span>
                <span class="o">&lt;</span><span class="nx">Text</span> <span class="nx">mt</span><span class="o">=</span><span class="p">{</span><span class="mf">0.02</span> <span class="o">*</span> <span class="nx">w</span><span class="p">}</span> <span class="nx">color</span><span class="o">=</span><span class="dl">"</span><span class="s2">#71717a</span><span class="dl">"</span> <span class="nx">bold</span> <span class="nx">size</span><span class="o">=</span><span class="dl">"</span><span class="s2">xl</span><span class="dl">"</span><span class="o">&gt;</span>
                    <span class="p">{</span><span class="nx">title</span><span class="p">}</span>
                <span class="o">&lt;</span><span class="sr">/Text</span><span class="err">&gt;
</span>            <span class="o">&lt;</span><span class="sr">/Link</span><span class="err">&gt;
</span>        <span class="p">...</span>
        <span class="o">&lt;</span><span class="sr">/Box</span><span class="err">&gt;
</span>    <span class="p">);</span>
<span class="p">};</span>

<span class="c1">// 参数的接受</span>
<span class="kd">const</span> <span class="nx">DetailScreen</span> <span class="o">=</span> <span class="p">({</span><span class="nx">route</span><span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="c1">// console.log('detail screen', route.params);</span>
    <span class="kd">const</span> <span class="p">{</span><span class="nx">props</span><span class="p">}</span> <span class="o">=</span> <span class="nx">route</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
    <span class="kd">const</span> <span class="p">{</span><span class="nx">userId</span><span class="p">}</span> <span class="o">=</span> <span class="nx">route</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
    <span class="kd">const</span> <span class="p">{</span><span class="nx">groupId</span><span class="p">}</span> <span class="o">=</span> <span class="nx">props</span><span class="p">.</span><span class="nx">groupId</span><span class="p">;</span>

    <span class="k">return</span> <span class="p">(</span>
        <span class="o">&lt;&gt;</span>
        <span class="p">...</span>
        <span class="o">&lt;</span><span class="sr">/</span><span class="err">&gt;
</span>    <span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p>在使用<code class="language-plaintext highlighter-rouge">Link</code>的时候,<code class="language-plaintext highlighter-rouge">screen</code>是我们希望导航到的页面名字（这个名字必须已经在<code class="language-plaintext highlighter-rouge">Navigator</code>中定义过了），<code class="language-plaintext highlighter-rouge">params</code>中使用<code class="language-plaintext highlighter-rouge">key:value</code>方式传递参数，在目标页面使用<code class="language-plaintext highlighter-rouge">route.params</code>接受参数（注意在函数参数中一定要加入<code class="language-plaintext highlighter-rouge">route</code>）。</p>

<h2 id="结语">结语</h2>
<p>通过这三篇文章，我基本上将我所接触到的<code class="language-plaintext highlighter-rouge">react-navigation</code>的基本用法和使用中遇到问题的解决方案做了介绍。<code class="language-plaintext highlighter-rouge">react-navigation</code>的更新还是非常快速的，并且相对于历史版本，语法上有了比较大的变动，最后还是要以<a href="https://reactnavigation.org/docs/getting-started/">官方文档</a>作为最重要的参考。</p>]]></content><author><name>Haoru</name></author><category term="React-Native" /><summary type="html"><![CDATA[react-navigation 6.x版本的安装、传参、navigator的使用等介绍（part3）。]]></summary></entry><entry><title type="html">react-navigation 6.x 使用指南 (1)</title><link href="http://localhost:4000/2022-09-18/react-navigation_1" rel="alternate" type="text/html" title="react-navigation 6.x 使用指南 (1)" /><published>2022-09-18T00:00:00+08:00</published><updated>2022-09-18T00:00:00+08:00</updated><id>http://localhost:4000/2022-09-18/react-navigation_1</id><content type="html" xml:base="http://localhost:4000/2022-09-18/react-navigation_1"><![CDATA[<p>react-navigation 6.x版本的安装、传参、navigator的使用等介绍（part1）。
<!--more--></p>

<p>目前react-navigation的官方文档已经更新到了<code class="language-plaintext highlighter-rouge">6.x</code>版本，在<a href="https://reactnavigation.org/docs/getting-started/">官方文档</a>中对于其基本的使用方法也有所介绍，但是对于一些比较复杂的使用场景，或者传参等细节问题并没有给出详细的解决方案。</p>

<p>在这篇文章中，我将介绍<code class="language-plaintext highlighter-rouge">react-navigation</code>的安装与<code class="language-plaintext highlighter-rouge">Tab navigation</code>的使用</p>

<h2 id="使用npm安装和卸载">使用npm安装和卸载</h2>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">--save</span> react-navigation 
npm <span class="nb">install </span>react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view // 安装相关的依赖

// 在babel.config.js的module.exports中增加这句：
plugins: <span class="o">[</span><span class="s1">'react-native-reanimated/plugin'</span><span class="o">]</span>

// 卸载
npm uninstall react-navigation <span class="nt">--save</span>
</code></pre></div></div>
<h2 id="tab-navigation的使用">Tab navigation的使用</h2>
<h3 id="基础用法官方文档中的示例">基础用法：官方文档中的示例</h3>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Text</span><span class="p">,</span> <span class="nx">View</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">NavigationContainer</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">createBottomTabNavigator</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/bottom-tabs</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">HomeScreen</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Text</span><span class="o">&gt;</span><span class="nx">Home</span><span class="o">!&lt;</span><span class="sr">/Text</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">SettingsScreen</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Text</span><span class="o">&gt;</span><span class="nx">Settings</span><span class="o">!&lt;</span><span class="sr">/Text</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">Tab</span> <span class="o">=</span> <span class="nx">createBottomTabNavigator</span><span class="p">();</span>

<span class="kd">function</span> <span class="nx">MyTabs</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Navigator</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Home</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Settings</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SettingsScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Tab.Navigator</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">NavigationContainer</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">MyTabs</span> <span class="o">/&gt;</span>
    <span class="o">&lt;</span><span class="sr">/NavigationContainer</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<p><strong>实现效果</strong>：底部有一个最基础的的导航栏，没有图标，顶上默认会有一个header，和<code class="language-plaintext highlighter-rouge">Tab.Screen</code>的<code class="language-plaintext highlighter-rouge">name</code>相一致。
<img src="../assets/my_pics/tab_nav.png" alt="tab_nav" /></p>

<h3 id="进阶1添加图标">进阶1:添加图标</h3>
<p>官方文档中的示例：</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Text</span><span class="p">,</span> <span class="nx">View</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Ionicons</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@expo/vector-icons</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">NavigationContainer</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">createBottomTabNavigator</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/bottom-tabs</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">HomeScreen</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Text</span><span class="o">&gt;</span><span class="nx">Home</span><span class="o">!&lt;</span><span class="sr">/Text</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">SettingsScreen</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Text</span><span class="o">&gt;</span><span class="nx">Settings</span><span class="o">!&lt;</span><span class="sr">/Text</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">Tab</span> <span class="o">=</span> <span class="nx">createBottomTabNavigator</span><span class="p">();</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">NavigationContainer</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Navigator</span>
        <span class="nx">screenOptions</span><span class="o">=</span><span class="p">{({</span> <span class="nx">route</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">({</span>
          <span class="na">tabBarIcon</span><span class="p">:</span> <span class="p">({</span> <span class="nx">focused</span><span class="p">,</span> <span class="nx">color</span><span class="p">,</span> <span class="nx">size</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">route</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">Home</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
              <span class="k">return</span> <span class="p">(</span>
                <span class="o">&lt;</span><span class="nx">Ionicons</span>
                  <span class="nx">name</span><span class="o">=</span><span class="p">{</span>
                    <span class="nx">focused</span>
                      <span class="p">?</span> <span class="dl">'</span><span class="s1">ios-information-circle</span><span class="dl">'</span>
                      <span class="p">:</span> <span class="dl">'</span><span class="s1">ios-information-circle-outline</span><span class="dl">'</span>
                  <span class="p">}</span>
                  <span class="nx">size</span><span class="o">=</span><span class="p">{</span><span class="nx">size</span><span class="p">}</span>
                  <span class="nx">color</span><span class="o">=</span><span class="p">{</span><span class="nx">color</span><span class="p">}</span>
                <span class="sr">/</span><span class="err">&gt;
</span>              <span class="p">);</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">route</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">Settings</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
              <span class="k">return</span> <span class="p">(</span>
                <span class="o">&lt;</span><span class="nx">Ionicons</span>
                  <span class="nx">name</span><span class="o">=</span><span class="p">{</span><span class="nx">focused</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">ios-list-box</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">ios-list</span><span class="dl">'</span><span class="p">}</span>
                  <span class="nx">size</span><span class="o">=</span><span class="p">{</span><span class="nx">size</span><span class="p">}</span>
                  <span class="nx">color</span><span class="o">=</span><span class="p">{</span><span class="nx">color</span><span class="p">}</span>
                <span class="sr">/</span><span class="err">&gt;
</span>              <span class="p">);</span>
            <span class="p">}</span>
          <span class="p">},</span>
          <span class="na">tabBarInactiveTintColor</span><span class="p">:</span> <span class="dl">'</span><span class="s1">gray</span><span class="dl">'</span><span class="p">,</span>
          <span class="na">tabBarActiveTintColor</span><span class="p">:</span> <span class="dl">'</span><span class="s1">tomato</span><span class="dl">'</span><span class="p">,</span>
        <span class="p">})}</span>
      <span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span>
          <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Home</span><span class="dl">"</span>
          <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreen</span><span class="p">}</span>
          <span class="nx">options</span><span class="o">=</span> <span class="p">{{</span> <span class="na">tabBarBadge</span><span class="p">:</span> <span class="mi">3</span> <span class="p">}}</span>
        <span class="sr">/</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Settings</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SettingsScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/Tab.Navigator</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/NavigationContainer</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<p>如果想要使用icon的话，需要在<code class="language-plaintext highlighter-rouge">Tab.Navigator</code>的<code class="language-plaintext highlighter-rouge">screenOption</code>中设置<code class="language-plaintext highlighter-rouge">tabBarIcon</code>的渲染效果，根据页面<code class="language-plaintext highlighter-rouge">name</code>和是否为选中页面<code class="language-plaintext highlighter-rouge">focused</code>设置不同的图标（<code class="language-plaintext highlighter-rouge">&lt;Ionicons ... /&gt;</code>)，还可以根据<code class="language-plaintext highlighter-rouge">tabBarInactiveTintColor</code>和<code class="language-plaintext highlighter-rouge">tabBarActiveTintColor</code>设置图标颜色，在<code class="language-plaintext highlighter-rouge">Tab.Screen</code>中设置<code class="language-plaintext highlighter-rouge">tabBarBadge</code>可以在图标上添加一个小红点，并指示数字，渲染效果如下：
<img src="../assets/my_pics/tab_nav_with_icon.png" alt="tab_nav_with_icon" /></p>

<p>在官方示例中，对于每一个图标都要写一次<code class="language-plaintext highlighter-rouge">&lt;Ionicons ... /&gt;</code>，太过于繁琐；并且<code class="language-plaintext highlighter-rouge">@expo/vector-icons</code>的图标可能在<code class="language-plaintext highlighter-rouge">react native</code>的原生环境中不能很好地渲染，于是我们可以做出这样的改进：</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">extendTheme</span><span class="p">,</span> <span class="nx">NativeBaseProvider</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">native-base</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">HomeScreenWrapper</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./screens/HomeScreen</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">Icon</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">native-base</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">BrowseScreen</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./screens/BrowseScreen</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">MyProfileScreenRoute</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./screens/MyProfileScreen</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">OrderScreen</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./screens/OrderScreen</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">CreateGroupScreen</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./screens/CreateGroupScreen</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">createBottomTabNavigator</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/bottom-tabs</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">NavigationContainer</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">AntDesign</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native-vector-icons/AntDesign</span><span class="dl">'</span><span class="p">;</span>

<span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Navigator</span>
      <span class="nx">screenOptions</span><span class="o">=</span><span class="p">{({</span><span class="nx">route</span><span class="p">})</span> <span class="o">=&gt;</span> <span class="p">({</span>
        <span class="na">headerStyle</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">backgroundColor</span><span class="p">:</span> <span class="dl">'</span><span class="s1">#fda4af</span><span class="dl">'</span><span class="p">,</span>
        <span class="p">},</span>
        <span class="na">headerTintColor</span><span class="p">:</span> <span class="dl">'</span><span class="s1">#fff</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">headerTitleStyle</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">fontWeight</span><span class="p">:</span> <span class="dl">'</span><span class="s1">bold</span><span class="dl">'</span><span class="p">,</span>
        <span class="p">},</span>
        <span class="na">tabBarIcon</span><span class="p">:</span> <span class="p">({</span><span class="nx">focused</span><span class="p">,</span> <span class="nx">color</span><span class="p">,</span> <span class="nx">size</span><span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
          <span class="kd">let</span> <span class="nx">iconName</span><span class="p">;</span>

          <span class="k">if</span> <span class="p">(</span><span class="nx">route</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">首页</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">iconName</span> <span class="o">=</span> <span class="nx">focused</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">home</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">home</span><span class="dl">'</span><span class="p">;</span>
          <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">route</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">附近拼团</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">iconName</span> <span class="o">=</span> <span class="nx">focused</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">appstore-o</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">appstore-o</span><span class="dl">'</span><span class="p">;</span>
          <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">route</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">订单</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">iconName</span> <span class="o">=</span> <span class="nx">focused</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">redenvelopes</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">redenvelopes</span><span class="dl">'</span><span class="p">;</span>
          <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">route</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">个人</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">iconName</span> <span class="o">=</span> <span class="nx">focused</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span><span class="p">;</span>
          <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">route</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">一键开团</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">iconName</span> <span class="o">=</span> <span class="nx">focused</span> <span class="p">?</span> <span class="dl">'</span><span class="s1">rocket1</span><span class="dl">'</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">rocket1</span><span class="dl">'</span><span class="p">;</span>
          <span class="p">}</span>

          <span class="c1">// You can return any component that you like here!</span>
          <span class="k">return</span> <span class="p">(</span>
            <span class="o">&lt;</span><span class="nx">Icon</span> <span class="k">as</span><span class="o">=</span><span class="p">{</span><span class="nx">AntDesign</span><span class="p">}</span> <span class="nx">name</span><span class="o">=</span><span class="p">{</span><span class="nx">iconName</span><span class="p">}</span> <span class="nx">size</span><span class="o">=</span><span class="p">{</span><span class="nx">size</span><span class="p">}</span> <span class="nx">color</span><span class="o">=</span><span class="p">{</span><span class="nx">color</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>          <span class="p">);</span>
        <span class="p">},</span>
        <span class="na">tabBarActiveTintColor</span><span class="p">:</span> <span class="dl">'</span><span class="s1">tomato</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">tabBarInactiveTintColor</span><span class="p">:</span> <span class="dl">'</span><span class="s1">gray</span><span class="dl">'</span><span class="p">,</span>
      <span class="p">})}</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span>
        <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">首页</span><span class="dl">"</span>
        <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreenWrapper</span><span class="p">}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span>
        <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">附近拼团</span><span class="dl">"</span>
        <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">BrowseScreen</span><span class="p">}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span>
        <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">一键开团</span><span class="dl">"</span>
        <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">CreateGroupScreen</span><span class="p">}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span>
        <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">订单</span><span class="dl">"</span>
        <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">OrderScreen</span><span class="p">}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span>
        <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">个人</span><span class="dl">"</span>
        <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">MyProfileScreenRoute</span><span class="p">}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Tab.Navigator</span><span class="err">&gt;
</span></code></pre></div></div>
<p>在这里，我们使用了<code class="language-plaintext highlighter-rouge">iconName</code>记录了应渲染图标的名字，最后只需要<code class="language-plaintext highlighter-rouge">return &lt;Icon as={AntDesign} name={iconName} size={size} color={color} /&gt; </code> 一次即可，这里我们使用的图标是<code class="language-plaintext highlighter-rouge">AntDesign</code> + <code class="language-plaintext highlighter-rouge">native-base</code>里面的icon,经试验能够在<code class="language-plaintext highlighter-rouge">react-native</code>的环境中有比较好的渲染效果，最后效果如下：
<img src="../assets/my_pics/my_tab.png" alt="my_tab" /></p>

<h3 id="进阶2不显示header">进阶2：不显示header</h3>
<p>在以上的几种实现中，都会携带默认的header，在<code class="language-plaintext highlighter-rouge">Tab.Navigator</code>的<code class="language-plaintext highlighter-rouge">screenOption</code>中设置<code class="language-plaintext highlighter-rouge">headerStyle</code>、<code class="language-plaintext highlighter-rouge">headerTitleStyle</code>等属性还可以改变header的背景颜色、字体风格等等，但是如果我们不想显示header的话，就需要在<code class="language-plaintext highlighter-rouge">Tab.Screen</code>的<code class="language-plaintext highlighter-rouge">options</code>中将<code class="language-plaintext highlighter-rouge">headerShown</code>设为<code class="language-plaintext highlighter-rouge">false</code>。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span>
        <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">首页</span><span class="dl">"</span>
        <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreenWrapper</span><span class="p">}</span>
        <span class="nx">options</span><span class="o">=</span> <span class="p">{{</span><span class="na">headerShown</span><span class="p">:</span> <span class="kc">false</span><span class="p">}}</span>
      <span class="sr">/</span><span class="err">&gt;
</span></code></pre></div></div>
<p>在这个时候我们就看不到header了，效果如下：
<img src="../assets/my_pics/witho.png" alt="without_header" /></p>]]></content><author><name>Haoru</name></author><category term="React-Native" /><summary type="html"><![CDATA[react-navigation 6.x版本的安装、传参、navigator的使用等介绍（part1）。]]></summary></entry><entry><title type="html">react-navigation 6.x 使用指南 (2)</title><link href="http://localhost:4000/2022-09-18/react-navigation_2" rel="alternate" type="text/html" title="react-navigation 6.x 使用指南 (2)" /><published>2022-09-18T00:00:00+08:00</published><updated>2022-09-18T00:00:00+08:00</updated><id>http://localhost:4000/2022-09-18/react-navigation_2</id><content type="html" xml:base="http://localhost:4000/2022-09-18/react-navigation_2"><![CDATA[<p>react-navigation 6.x版本的安装、传参、navigator的使用等介绍（part2）。
<!--more--></p>

<p>目前react-navigation的官方文档已经更新到了<code class="language-plaintext highlighter-rouge">6.x</code>版本，在<a href="https://reactnavigation.org/docs/getting-started/">官方文档</a>中对于其基本的使用方法也有所介绍，但是对于一些比较复杂的使用场景，或者传参等细节问题并没有给出详细的解决方案。</p>

<p>在这篇文章中，我将介绍<code class="language-plaintext highlighter-rouge">Native Stack Navigator</code>的使用以及<code class="language-plaintext highlighter-rouge">Drawer Navigation</code>的使用。</p>

<h2 id="native-stack-navigator">Native Stack Navigator</h2>
<h3 id="基本用法">基本用法</h3>
<p>如果不想显示任何导航栏，<code class="language-plaintext highlighter-rouge">stack navigator</code>无疑是个最好的选择，这是最基本的页面导航，它维护了一个栈结构，进入一个页面相当于在栈里压入了一个页面，返回操作相当于在栈中弹出一个页面。在<a href="https://reactnavigation.org/docs/native-stack-navigator/">官方文档</a>给出了基本的用法：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Button</span><span class="p">,</span> <span class="nx">View</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">NavigationContainer</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">createNativeStackNavigator</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native-stack</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">HomeScreen</span><span class="p">({</span> <span class="nx">navigation</span> <span class="p">})</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Button</span>
        <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go to Profile</span><span class="dl">"</span>
        <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="dl">'</span><span class="s1">Profile</span><span class="dl">'</span><span class="p">)}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">ProfileScreen</span><span class="p">({</span> <span class="nx">navigation</span> <span class="p">})</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Button</span>
        <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go to Notifications</span><span class="dl">"</span>
        <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="dl">'</span><span class="s1">Notifications</span><span class="dl">'</span><span class="p">)}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Button</span> <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go back</span><span class="dl">"</span> <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">goBack</span><span class="p">()}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">NotificationsScreen</span><span class="p">({</span> <span class="nx">navigation</span> <span class="p">})</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Button</span>
        <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go to Settings</span><span class="dl">"</span>
        <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="dl">'</span><span class="s1">Settings</span><span class="dl">'</span><span class="p">)}</span>
      <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Button</span> <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go back</span><span class="dl">"</span> <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">goBack</span><span class="p">()}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">SettingsScreen</span><span class="p">({</span> <span class="nx">navigation</span> <span class="p">})</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Button</span> <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go back</span><span class="dl">"</span> <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">goBack</span><span class="p">()}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">Stack</span> <span class="o">=</span> <span class="nx">createNativeStackNavigator</span><span class="p">();</span>

<span class="kd">function</span> <span class="nx">MyStack</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Navigator</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Home</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Notifications</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">NotificationsScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Profile</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">ProfileScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Settings</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SettingsScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Stack.Navigator</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">NavigationContainer</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">MyStack</span> <span class="o">/&gt;</span>
    <span class="o">&lt;</span><span class="sr">/NavigationContainer</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<p>这里<code class="language-plaintext highlighter-rouge">createNativeStackNavigator</code>创建了一个<code class="language-plaintext highlighter-rouge">stack</code>,在不同的页面之间，点击<code class="language-plaintext highlighter-rouge">Button</code>触发<code class="language-plaintext highlighter-rouge">navigation.navigate</code>导航到特定名字的页面，或者触发<code class="language-plaintext highlighter-rouge">navigation.goBack</code>返回上一级页面，如果我们使用的是真机的话，后退手势也可以返回上一级页面。实现的效果如下：
<img src="../assets/my_pics/stack%2000_00_00-00_00_30.gif" alt="show" /></p>

<p>同样，这里默认还是会显示header的，如果我们不想显示header的话，也可以在<code class="language-plaintext highlighter-rouge">Stack.Navigator</code>里面添加<code class="language-plaintext highlighter-rouge">headerShown: false</code>属性，原则上第一个页面是打开的默认页面，我们也可以使用<code class="language-plaintext highlighter-rouge">initialRouteName</code>指定默认页面，如下所示：</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Navigator</span> 
    <span class="nx">initialRouteName</span><span class="o">=</span><span class="dl">"</span><span class="s2">Notifications</span><span class="dl">"</span>
    <span class="nx">screenOptions</span><span class="o">=</span><span class="p">{{</span><span class="na">headerShown</span><span class="p">:</span> <span class="kc">false</span><span class="p">}}</span>
    <span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Home</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Notifications</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">NotificationsScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Profile</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">ProfileScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="nx">Stack</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Settings</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SettingsScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/Stack.Navigator</span><span class="err">&gt;
</span></code></pre></div></div>
<h3 id="进阶不同navigator之间的嵌套">进阶：不同navigator之间的嵌套</h3>
<p>如果我们希望做一个购物网站，浏览页底部显示tab导航栏，详情页面等一些页面不显示底部的tab导航栏，那我们可以将tab导航栏包裹后作为一个<code class="language-plaintext highlighter-rouge">stack.screen</code>，而其他不需要显示底部tab导航栏的也作为同级的<code class="language-plaintext highlighter-rouge">stack.screen</code>，示例如下：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span><span class="nx">createBottomTabNavigator</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/bottom-tabs</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">NavigationContainer</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">createNativeStackNavigator</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native-stack</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">Tab</span> <span class="o">=</span> <span class="nx">createBottomTabNavigator</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">Route</span> <span class="o">=</span> <span class="nx">createNativeStackNavigator</span><span class="p">();</span>

<span class="k">export</span> <span class="kd">function</span> <span class="nx">TabWrapper</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Navigator</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Tab</span><span class="p">.</span><span class="nx">Screen</span>
        <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">首页</span><span class="dl">"</span>
        <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreenWrapper</span><span class="p">}</span>
        <span class="nx">options</span><span class="o">=</span>
      <span class="sr">/</span><span class="err">&gt;
</span>      <span class="p">.....</span>
    <span class="o">&lt;</span><span class="sr">/Tab.Navigator</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">NativeBaseProvider</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">NavigationContainer</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">Route</span><span class="p">.</span><span class="nx">Navigator</span>
          <span class="nx">initialRouteName</span><span class="o">=</span><span class="dl">"</span><span class="s2">Welcome</span><span class="dl">"</span>
          <span class="nx">screenOptions</span><span class="o">=&gt;</span>
          <span class="o">&lt;</span><span class="nx">Route</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Detail</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">DetailScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>          <span class="p">......</span>
          <span class="o">&lt;</span><span class="nx">Route</span><span class="p">.</span><span class="nx">Screen</span>
            <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">TabWrapper</span><span class="dl">"</span>
            <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">TabWrapper</span><span class="p">}</span>
            <span class="nx">options</span><span class="o">=</span>
          <span class="sr">/</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="sr">/Route.Navigator</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/NavigationContainer</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/NativeBaseProvider</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="drawer-navigation">Drawer Navigation</h2>
<h3 id="基本用法-1">基本用法</h3>
<p><code class="language-plaintext highlighter-rouge">Drawer Navigation</code>实现了一个左侧的可收起导航栏，基本使用方法可见<a href="https://reactnavigation.org/docs/drawer-based-navigation">官方文档</a></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Button</span><span class="p">,</span> <span class="nx">View</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">createDrawerNavigator</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/drawer</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">NavigationContainer</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/native</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">HomeScreen</span><span class="p">({</span> <span class="nx">navigation</span> <span class="p">})</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Button</span>
        <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="dl">'</span><span class="s1">Notifications</span><span class="dl">'</span><span class="p">)}</span>
        <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go to notifications</span><span class="dl">"</span>
      <span class="o">/&gt;</span>
    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">NotificationsScreen</span><span class="p">({</span> <span class="nx">navigation</span> <span class="p">})</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">Button</span> <span class="nx">onPress</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">navigation</span><span class="p">.</span><span class="nx">goBack</span><span class="p">()}</span> <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Go back home</span><span class="dl">"</span> <span class="o">/&gt;</span>
    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">Drawer</span> <span class="o">=</span> <span class="nx">createDrawerNavigator</span><span class="p">();</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">NavigationContainer</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Navigator</span> <span class="nx">useLegacyImplementation</span> <span class="nx">initialRouteName</span><span class="o">=</span><span class="dl">"</span><span class="s2">Home</span><span class="dl">"</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Home</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">HomeScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Notifications</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">NotificationsScreen</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/Drawer.Navigator</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/NavigationContainer</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<p>在<code class="language-plaintext highlighter-rouge">Drawer Navigator</code>中也可以用触发<code class="language-plaintext highlighter-rouge">navigation.navigate</code>导航到特定名字的页面，或者触发<code class="language-plaintext highlighter-rouge">navigation.goBack</code>返回上一级页面,或者使用真机回退手势实现页面的回退；和<code class="language-plaintext highlighter-rouge">Tab Navigator</code>一样，同样也可以将<code class="language-plaintext highlighter-rouge">Drawer Navigator</code>嵌套到<code class="language-plaintext highlighter-rouge">Stack Navigator</code>。样例的效果如下：
<img src="../assets/my_pics/drawer%2000_00_00-00_00_30.gif" alt="show" /></p>

<h3 id="进阶参数传递">进阶：参数传递</h3>
<p>假如我们希望使用<code class="language-plaintext highlighter-rouge">Drawer Navigator</code>实现一个分类页面，渲染效果基本相同，但是传递的参数不同导致内容不同，为了不简单地将渲染效果的代码简单复制粘贴多遍，造成大量代码冗余，我们可以使用一个<code class="language-plaintext highlighter-rouge">SwitchScreen{i}</code>作为中间桥梁，不同的<code class="language-plaintext highlighter-rouge">SwitchScreen</code>向最终渲染效果的<code class="language-plaintext highlighter-rouge">RenderScreen</code>传递不同的参数，代码如下：</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span><span class="nx">useState</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">ActivityIndicator</span><span class="p">,</span> <span class="nx">Button</span><span class="p">,</span> <span class="nx">View</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">createDrawerNavigator</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@react-navigation/drawer</span><span class="dl">'</span><span class="p">;</span>


<span class="kd">const</span> <span class="nx">RenderScreen</span> <span class="o">=</span> <span class="nx">props</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">RenderScreen props:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">props</span><span class="p">);</span>

    <span class="nx">React</span><span class="p">.</span><span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="p">....</span>
        <span class="p">}</span>
    <span class="p">},</span> <span class="p">[]);</span>

    <span class="k">return</span> <span class="p">(</span>
        <span class="p">.....</span>
    <span class="p">);</span>
<span class="p">};</span>

<span class="c1">// SwtichScreen 用于不同类别页面的渲染，起到桥梁作用</span>
<span class="kd">function</span> <span class="nx">SwitchScreen1</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">RenderScreen</span> <span class="nx">props</span><span class="o">=</span><span class="dl">"</span><span class="s2">默认</span><span class="dl">"</span> <span class="o">/&gt;</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">SwitchScreen2</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">RenderScreen</span> <span class="nx">props</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别1</span><span class="dl">"</span> <span class="o">/&gt;</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">SwitchScreen3</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">RenderScreen</span> <span class="nx">props</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别2</span><span class="dl">"</span> <span class="o">/&gt;</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">SwitchScreen4</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">RenderScreen</span> <span class="nx">props</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别3</span><span class="dl">"</span> <span class="o">/&gt;</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">SwitchScreen5</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">RenderScreen</span> <span class="nx">props</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别4</span><span class="dl">"</span> <span class="o">/&gt;</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">SwitchScreen6</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">RenderScreen</span> <span class="nx">props</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别5</span><span class="dl">"</span> <span class="o">/&gt;</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">Drawer</span> <span class="o">=</span> <span class="nx">createDrawerNavigator</span><span class="p">();</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">BrowseScreen</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Navigator</span>
      <span class="nx">useLegacyImplementation</span>
      <span class="nx">initialRouteName</span><span class="o">=</span><span class="dl">"</span><span class="s2">默认</span><span class="dl">"</span>
      <span class="nx">drawerBackgroundColor</span><span class="o">=</span><span class="dl">"</span><span class="s2">#fda4af</span><span class="dl">"</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">默认</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SwitchScreen1</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别1</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SwitchScreen2</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别2</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SwitchScreen3</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别3</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SwitchScreen4</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别4</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SwitchScreen5</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">Drawer</span><span class="p">.</span><span class="nx">Screen</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">类别5</span><span class="dl">"</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">SwitchScreen6</span><span class="p">}</span> <span class="sr">/</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Drawer.Navigator</span><span class="err">&gt;
</span>  <span class="p">);</span>
</code></pre></div></div>]]></content><author><name>Haoru</name></author><category term="React-Native" /><summary type="html"><![CDATA[react-navigation 6.x版本的安装、传参、navigator的使用等介绍（part2）。]]></summary></entry></feed>